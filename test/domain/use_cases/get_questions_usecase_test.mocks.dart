// Mocks generated by Mockito 5.4.5 from annotations
// in online_exam_app/test/domain/use_cases/get_questions_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:online_exam_app/data/model/questions_response/question_response.dart'
    as _i5;
import 'package:online_exam_app/domain/common/result.dart' as _i4;
import 'package:online_exam_app/domain/repo_contract/questions_repo_contract/get_questions_repo_contract.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetQuestionsRepoContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetQuestionsRepoContract extends _i1.Mock
    implements _i2.GetQuestionsRepoContract {
  MockGetQuestionsRepoContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.QuestionResponse>> getQuestions(String? examId) =>
      (super.noSuchMethod(
            Invocation.method(#getQuestions, [examId]),
            returnValue: _i3.Future<_i4.Result<_i5.QuestionResponse>>.value(
              _i6.dummyValue<_i4.Result<_i5.QuestionResponse>>(
                this,
                Invocation.method(#getQuestions, [examId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.QuestionResponse>>);
}
